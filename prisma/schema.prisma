generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  isAdmin     Boolean       @default(false)
  tournaments Tournament[]  @relation("UserTournaments")
  matches1    Match[]       @relation("Player1Matches")
  matches2    Match[]       @relation("Player2Matches")
  matchesWon  Match[]       @relation("MatchesWon")
  matchesLost Match[]       @relation("MatchesLost")
  Participant Participant[]
}

model Tournament {
  id           Int           @id @default(autoincrement())
  name         String
  startDate    DateTime
  endDate      DateTime
  participants Participant[]
  matches      Match[]
  createdBy    User          @relation("UserTournaments", fields: [userId], references: [id])
  userId       Int
}

model Participant {
  id           Int        @id @default(autoincrement())
  tournament   Tournament @relation(fields: [tournamentId], references: [id])
  tournamentId Int
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
  seed         Int
}

model Match {
  id           Int        @id @default(autoincrement())
  tournament   Tournament @relation(fields: [tournamentId], references: [id])
  tournamentId Int
  round        Int
  player1      User       @relation("Player1Matches", fields: [player1Id], references: [id])
  player1Id    Int
  player2      User       @relation("Player2Matches", fields: [player2Id], references: [id])
  player2Id    Int
  scorePlayer1 Int        @default(0)
  scorePlayer2 Int        @default(0)
  winner       User?      @relation("MatchesWon", fields: [winnerId], references: [id])
  winnerId     Int?
  loser        User?      @relation("MatchesLost", fields: [loserId], references: [id])
  loserId      Int?
}
